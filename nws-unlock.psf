<File version="3.2">
  <FileID>2246cf42-ff9c-48c6-a5ed-5fc7a5f4f102</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAFtHSURBVHhe7b1XcBzZgp4phSZCq1eFHuZBD7sb
sdLszEgzG7rSOM3MvXfm9u1uNsmma3oLWoBwBGhAeEMQoAHoPQlaeIAACO+99957770H/j0nC0WC
aJANNtHVSfL/EF+gKivtycxz/pOVVfVvCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQghZEWH/9t/+24p//+//fcW3335TYWBgWGFoYKT8p5RSSqn6NTQ0qtA7
sL/iP/3H/1jx7/7dv6sQbbv0/fzJn/xJ45//+f8LIyMTeAeGori6DdVNfahs7KGUUkqpyq1q6hXt
di8y8kpw3uUC/v7v/g7/4T/8Byw08+/m/xA9fyMjY6TlVyKjoh0J+XWIz6tFfD6llFJKPwlFu51c
1ITiuk5cv3Ebf/qnf/rTAeDrr7+ueOEbgqzKDtH41yKRUkoppZ+csg1PLWlGRkEVjhw+/NMBwNDA
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
SukXKAMApZRS+gW66gGgRsxQzpRSSiml6rVyUdu9KgGgfGFGlFJKKVWvb7Xd4vlHBwBKKaWUflr+
rABQ0Tr6VqKglFJK6adlWfMwulcaAAwMjlePzQC9Y1AmopRSSukn6ggwB8D9yvWfDgBbt26tuHTZ
HRcuXIIrpZRSSj9p3dyvQu/goZ8OAIQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIeTL49/8m/8f0bsU06QALloAAAAASUVORK5CYII=</Preview>
  <Form>+wUO1wi+sycAACODCAAAAAAABADVWt9P6kgUft9k/4cJD/tElIKAZpVEyr16c7nqAurLJmTaHmXWYYbbTi+y
f/2eaYtWKTKDwGpMULBnztfzfefHTDm+9P4BX0Wt338j5Dh9Q9RsAiel/ixSMN67ZSKQ02jvqwzH
6WuZFP2rTG4gjJgUJwd7Ff1TJm7MVRzCiYBYhZSXyVXsceZ/h9lAPoA48ZpNWvfrDeeodgCVw6MS
EXSMnu9wvYvb/rXg0n8YSMlLxB8xHoRoU3KlUKHkUSmBjKCvQjmBUM0y41Pfh4lqx0pJMb8Gr+rB
HaC9D9llXnKBy2UEJbI/X2t/vtiyxWMl+z7l0GFjEPpuEUejTJyauekPGUCp9RVvY6WNyxkI1Wf/
okGjgRGtNVc70my0ZRhA2Fczrl2xRwg6jHJ5v9L4B31kY/TXlo9oSHkEq02YsDW5wNdSa4HmlXZ9
RUN1JSOmmCbXxeDgXfohgFhpO4BHVWqhP5I6JMUev/zCRTOTrqRBAcyh/vx4P7lybrY6c3rMH2kM
GKatJ1CIvhT68uSj81buLEapK32aBrdaRbkdLMqtQACIknEmYBn9ywSQh2lg1AMaXAo+K7UGYWzi
JU2cZq1MqhWDywfU+yYCQBU7DZPLE0FlnBFnb9HF8X4qC3OR7Eogyhv6UghEo0uYoiqO1tXJgdMs
k4ZJwFLSC1xvj3vHqdqTX98AkWn/2TqPaRcbQKTcp5i+i8ha05jIIt+WxJhUlxwxB8ZZqVERK1jX
EdywKKY8aZpt6j+4kstwud7yjQL7tP9QHJFh8r9X3cJaTq4ce3IXhcH3hmI6iaKfPPDshNTBtx05
FdnQMX/bZdHinFM8tFClmLj/IqjHITBO9G8YjhwsvEB/8jKYfRXiymUyjnwZcuZtImAtHafA+1v/
moQSBwLt9//FoUAH+wUOgwi+6vlHxhUgLxbzzD/Au6ya9Ptc5hcWinwG9oFjCkGQGLgjKu61hPIA
h0WXvDcvd9ivQ4jQeO02Xa/VddhN4v7UpzOX22zPa8xm1c/WntOdAzaY0I68p0poOlW/YttpLobq
7Wb+jNSSQstGbpT9SSPP9mqGkDbXxJ8j8dkauHaEGyoNH4IYb8CyZLyvj1trdv3Gn5tcK4d2ai8I
krngq459/9rE3rBDFT0LWXDDYLp1GQXo7B6dDbF3/owhnNmJ6JRzOdXZM5CnQdBDhOaKyNl2sGUr
WNu8BxFShiUgHov3rGAJQPijpObISZm0JVaTcZl04c4kfZJDwmfM6VEh4nGBcxOJpnbn2I1RCOfA
7kfJ6WG2Tra49Uh4aJ5ZC7rZyvDgo/p4m2Jp0+cvivl08SRvWf7Wag3M3/riJv+tBF6ciT/4zHEm
dztr1A4tR40zudURwwROOmH8QceTP43QbG66OJObmSq61AO+dUVx7eUMVDfplpexurafKua1Z43u
nu5czEtQMVw7tRVvOJeqzeTQLFUb4iIpMILISDG0Dy2E/l/dKxpFUxkGO5NAzXHsJZADav6soGnN
vfmjAgREliL66JxrpepPdsa5c9hci/M5UHPOj6w5NxoenjhfiuhDc35xe9XXWw6PRnAuI7VT8vXU
act9EWC7U0lLFZg/jtDQyBwbWQruQ58/ZgepEyxg655BJmXcYlJ86dWcy0rF+lTRhHnM4zTM8yLu
juiy6e8zUBlbn0i+qs4WDwtfet0qlZ/ufDj7EpJVac3OGObHCz290zeIUvotoF5yrl9qXX63G8T1
Nylq1ju95PbMu3Hdeq9nJI/nvV6Ch2gqzXLeleMJRgC3x3qRHqBT/RTPuKvZbRtfaDX3Zv5n1PoP
lNrrcbMnAAA=</Form>
  <Code><![CDATA[
$formNWSUnlockTool_Load={
	#TODO: Initialize Form Controls here
	$cb_nwpssqldb.SelectedIndex = 0
}

$buttonGo_Click={
	#TODO: Place custom script here
	$results = Get-Query_NWS
	$results1 = ConvertTo-DataTable -InputObject $results -FilterWMIProperties
	$datagrid_sqlquery.DataSource = $results1
	
	#Update dropdown list with LoginID from Data Grid
	$comboboxlockedusers.DataSource = $datagrid_sqlquery.DataSource
	$comboboxlockedusers.DisplayMember = 'LoginID'
	
	if ($comboboxlockedusers.Text -ne "")
	{
		$buttonUnlockUser.Enabled = $true
		$comboboxlockedusers.Enabled = $true
	}
	else
	{
		[System.Windows.Forms.MessageBox]::Show('There are currently no users locked out in your ORI', 'Locked Users')
		$buttonUnlockUser.Enabled = $false
		$comboboxlockedusers.Enabled = $false
	}
	
}


function Test-SQLConnection
{
	[OutputType([bool])]
	Param
	(
		[Parameter(Mandatory = $true,
				   ValueFromPipelineByPropertyName = $true,
				   Position = 0)]
		$ConnectionString
	)
	try
	{
		$sqlConnection = New-Object System.Data.SqlClient.SqlConnection $ConnectionString
		$sqlConnection.Open();
		$sqlConnection.Close();
		$tb_connectionstatus.Text = "True"
		$buttonGo.Enabled = $true

	}
	catch
	{
		$buttonGo.Enabled = $false
		$tb_connectionstatus.Text = "False"
		$datagrid_sqlquery.DataSource = $null

	}
}

function Get-Query_NWS
{
	[OutputType([System.Data.DataTable])]
	Param ()
	
	#Load the database assembly
	Add-Type -AssemblyName 'System.Data'
	
	$NWPSORI = "IN0480000"
	#Save this for later to add to QueryString
	#  And Users.DefaultORI = '$($NWPSORI)'
	
	#Database Query
	$QueryString = "Select Users.LoginID,
  Users.DefaultORI, Users.ModifiedDate
From Users
Where Users.InactiveFlag = 0 And Users.LockedOutFlag = 1"
	#Database Connection String
	$ConnectionString = "Data Source=$($cb_nwpssqldb.Text);Initial Catalog=NWSEnterpriseSecurity;Integrated Security=False;User ID=$($tb_nwpssqluser.Text);Password=$($tb_nwpssqlpass.Text)"
	
	$command = New-Object System.Data.SqlClient.SqlCommand ($QueryString, $ConnectionString)
	$adapter = New-Object System.Data.SqlClient.SqlDataAdapter ($command)
	
	#Load the Dataset
	$dataset = New-Object System.Data.DataSet
	[void]$adapter.Fill($dataset)
	
	#Return the Dataset
	return @( ,$dataset.Tables[0])
}


#region Control Helper Functions
function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]
		$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ComboBox.DisplayMember = $DisplayMember
	}
	
	if ($ValueMember)
	{
		$ComboBox.ValueMember = $ValueMember
	}
}



function Update-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The DataGridView control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the DataGridView's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	.PARAMETER AutoSizeColumns
	    Resizes DataGridView control's columns after loading the items.
	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember,
		[System.Windows.Forms.DataGridViewAutoSizeColumnsMode]$AutoSizeColumns = 'None'
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($null -eq $Item)
	{
		$DataGridView.DataSource = $null
	}
	elseif ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
	{
		$DataGridView.DataSource = $Item.Tables[0]
	}
	elseif ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{
			$array.Add($Item)
		}
		$DataGridView.DataSource = $array
	}
	
	if ($AutoSizeColumns -ne 'None')
	{
		$DataGridView.AutoResizeColumns($AutoSizeColumns)
	}
	
	$DataGridView.ResumeLayout()
}



function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterCIMProperties
			This switch removes CIM properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param(
	$InputObject, 
	[ValidateNotNull()]
	[System.Data.DataTable]$Table,
	[switch]$RetainColumns,
	[switch]$FilterCIMProperties)
	
	if($null -eq $Table)
	{
		$Table = New-Object System.Data.DataTable
	}
	
	if ($null -eq $InputObject)
	{
		$Table.Clear()
		return @( ,$Table)
	}
	
	if ($InputObject -is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
	{
		$Table = $InputObject.Tables[0]
	}
	else
	{
		if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()
			
			if ($null -eq $InputObject) { return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach ($item in $InputObject)
			{
				if ($null -ne $item)
				{
					$object = $item
					break
				}
			}
			
			if ($null -eq $object) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if (-not $FilterCIMProperties -or -not $prop.Name.StartsWith('__')) #filter out CIM properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if ($null -ne $prop.Value)
					{
						try { $type = $prop.Value.GetType() }
						catch { Out-Null }
					}
					
					if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
						[void]$table.Columns.Add($prop.Name, $type)
					}
					else #Type info not found
					{
						[void]$table.Columns.Add($prop.Name)
					}
				}
			}
			
			if ($object -is [System.Data.DataRow])
			{
				foreach ($item in $InputObject)
				{
					$Table.Rows.Add($item)
				}
				return @( ,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()
		}
		
		foreach ($item in $InputObject)
		{
			$row = $table.NewRow()
			
			if ($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if ($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}
	
	return @(,$Table)
}


function Set-NWSUnlock
{
	[OutputType([System.Data.DataTable])]
	Param ()
	
	#Load the database assembly
	Add-Type -AssemblyName 'System.Data'
	
	#Database Query
	$QueryString = "update [NWSEnterpriseSecurity].[dbo].[Users]
set LockedOutFlag = 0
where LoginID =  '$($comboboxlockedusers.Text)'"
	
	#Database Connection String
	$ConnectionString = "Data Source=$($cb_nwpssqldb.Text);Initial Catalog=NWSEnterpriseSecurity;Integrated Security=False;User ID=$($tb_nwpssqluser.Text);Password=$($tb_nwpssqlpass.Text)"
	
	$command = New-Object System.Data.SqlClient.SqlCommand ($QueryString, $ConnectionString)
	$adapter = New-Object System.Data.SqlClient.SqlDataAdapter ($command)
	
	#Load the Dataset
	$dataset = New-Object System.Data.DataSet
	[void]$adapter.Fill($dataset)
	
	#Return the Dataset
	return @( ,$dataset.Tables[0])
}

#endregion


$buttonUnlockUser_Click={
	#TODO: Place custom script here
	if ($comboboxlockedusers.Text -ne "")
	{
		try
		{
			Set-NWSUnlock
			$tb_results.Text = "Successful!"
		}
		
		catch
		{
			$tb_results.Text = "Error"
		}
	}
	
	else
	{
		[System.Windows.Forms.MessageBox]::Show('Please make sure a user is selected', 'Selected User')
	}
	
	
}

$buttonTestConnection_Click={
	#TODO: Place custom script here
	Test-SQLConnection "Data Source=$($cb_nwpssqldb.Text);Initial Catalog=NWSEnterpriseSecurity;Integrated Security=False;User ID=$($tb_nwpssqluser.Text);Password=$($tb_nwpssqlpass.Text)"
	
}

$cb_nwpssqldb_SelectedIndexChanged={
	#TODO: Place custom script here
	$buttonGo.Enabled = $false
	$buttonUnlockUser.Enabled = $false
	$comboboxlockedusers.Enabled = $false
	$comboboxlockedusers.DataSource = $null
	$datagrid_sqlquery.DataSource = $null
	$tb_connectionstatus.Text = ""
	
}
]]></Code>
  <Mode>0</Mode>
  <Assemblies />
</File>